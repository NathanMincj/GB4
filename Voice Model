import speech_recognition as sr
import time
from PDM_transmitter import pulsemodulation
import serial
import serial
import time

def listen_commands(mic_index=1, interval=14, port='/dev/cu.usbmodem101'):
    
    
    recognizer = sr.Recognizer()

    try:
        while True:
            start_time = time.time()

            with sr.Microphone(device_index=mic_index) as source:
        
                recognizer.adjust_for_ambient_noise(source, duration=1)

               
                audio = recognizer.listen(source)

        
            with open("command.wav", "wb") as f:
                f.write(audio.get_wav_data())

            duration = len(audio.frame_data) / (audio.sample_rate * audio.sample_width)
            
            try:
                text = recognizer.recognize_google(audio).lower()
                print(f" {text}")

                if "go up" in text:
                    print("UP")
                    pulsemodulation([1], short_duration=0.2, long_duration=1.5, symbol_interval=5.0, port=port)
                    
                elif "go down" in text:
                    print("DOWN")
                    pulsemodulation([0], short_duration=0.2, long_duration=1.5, symbol_interval=5.0, port=port)
                    
                elif "exit" in text:
                    print('exit')
                    break
                else:
                    print(" Unknown command, please try again.")

            except sr.UnknownValueError:
                print("Try again")
            except sr.RequestError as e:
                print(f" Google error: {e}")
                break

            elapsed = time.time() - start_time
            sleep_time = max(0, interval - elapsed)
            print(f"wait {sleep_time:.1f} ...\n")
            time.sleep(sleep_time)

    except KeyboardInterrupt:
        print("exit")


   
listen_commands(mic_index=1, interval=6, port='/dev/cu.usbmodem21301')
